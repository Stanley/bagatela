<?xml version="1.0" encoding="UTF-8"?>
<rexster>
  <rexster-server-port>8182</rexster-server-port>
  <base-uri>http://localhost</base-uri>
  <character-set>UTF-8</character-set>
  <web-root>public</web-root>
  <web-server-configuration>
    <com.sun.jersey.config.property.packages>com.tinkerpop.rexster</com.sun.jersey.config.property.packages>
    <com.sun.jersey.spi.container.ContainerResponseFilters>com.tinkerpop.rexster.HeaderResponseFilter</com.sun.jersey.spi.container.ContainerResponseFilters>
  </web-server-configuration>
  <graphs>
    <graph>
      <graph-name>2011-09-13</graph-name>
      <graph-type>com.tinkerpop.rexster.config.Neo4jGraphConfiguration</graph-type>
      <!--<graph-file>/home/code/bagatela/db/production/2011-09-13</graph-file>-->
      <graph-file>/home/code/bagatela/db</graph-file>
      <read-only>true</read-only>
      <properties>
        <!-- Memory mapped I/O settings -->
        <!-- For high traversal speed it is important to have the nodestore.db and relationshipstore.db files. -->
        <neostore.nodestore.db.mapped_memory>285M</neostore.nodestore.db.mapped_memory>
        <neostore.relationshipstore.db.mapped_memory>285M</neostore.relationshipstore.db.mapped_memory>
        <neostore.propertystore.db.mapped_memory>100M</neostore.propertystore.db.mapped_memory>
        <neostore.propertystore.db.strings.mapped_memory>100M</neostore.propertystore.db.strings.mapped_memory>
        <neostore.propertystore.db.arrays.mapped_memory>10M</neostore.propertystore.db.arrays.mapped_memory>
        <neostore.propertystore.db.index.mapped_memory>10M</neostore.propertystore.db.index.mapped_memory>
        <neostore.propertystore.db.index.keys.mapped_memory>10M</neostore.propertystore.db.index.keys.mapped_memory>

        <!-- Cache settings  -->
        <!-- use adaptive caches YES|NO. Let Neo try make best use of available heap.  -->
        <use_adaptive_cache>YES</use_adaptive_cache>

        <!-- heap usage/max heap size ratio. Neo will increase caches while ratio is
             less and decrease if greater. Default 0.77 seems to be a good over all
             ratio of heap usage to avoid GC trashing. Larger heaps may allow for a
             higher ratio while tiny heaps may need even less. -->
        <adaptive_cache_heap_ratio>0.77</adaptive_cache_heap_ratio>

        <!-- how aggressive Neo will decrease caches once heap ratio reached  -->
        <adaptive_cache_manager_decrease_ratio>1.15</adaptive_cache_manager_decrease_ratio>

        <!-- how aggressive Neo will increase caches if ratio isn't yet reached  -->
        <adaptive_cache_manager_increase_ratio>1.1</adaptive_cache_manager_increase_ratio>

        <!-- if no requests are made to Neo this is the amount of time in ms
             Neo will wait before it checks the heap usage and adapts the
             caches if needed -->
        <adaptive_cache_worker_sleep_time>3000</adaptive_cache_worker_sleep_time>

        <!-- minimum size (number of nodes) of node cache. If adaptive cache is
             in use node cache will not be decreased under this value -->
        <min_node_cache_size>0</min_node_cache_size>

        <!--  minimum size (number of relationships) of relationship cache. If
              adaptive cache is in use relationship cache will not be decreased
              under this value -->
        <min_relationship_cache_size>0</min_relationship_cache_size>

        <!-- maximum size (number of nodes) of node cache. If adaptive cache is
             not in use the node cache will not be increased above this value
             -->
        <max_node_cache_size>1500</max_node_cache_size>

        <!-- maximum size (number of relationship) of node cache. If adaptive
             cache is not in use the relationship cache will not be increased
             above this value  -->
        <max_relationship_cache_size>3500</max_relationship_cache_size>
      </properties>
      <extensions>
        <allows>
          <allow>tp:gremlin</allow>
        </allows>
      </extensions>
    </graph>
  </graphs>
</rexster>
